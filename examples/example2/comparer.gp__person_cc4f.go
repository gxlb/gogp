///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Tue Oct 25 2016 22:46:23]
// Generate from:
//   [github.com/vipally/gogp/examples/example2/stack.gp_person.go]
//   [github.com/vipally/gogp/examples/example2/example2.gpg] [person]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct 24 2016 20:25:45]
// Version : 3.0.0.final
//
///////////////////////////////////////////////////////////////////

//this file is used to import by other gp files
//it cannot use independently
//simulation C++ stl functors
package example2

type Comparer_PersonPart interface {
	F(left, right *Person) bool
}

type Comparer_PersonCreator int

const (
	LESSER__Person Comparer_PersonCreator = iota
	GREATER__Person
)

func (me Comparer_PersonCreator) Create() (cmp Comparer_Person) {
	switch me {
	case LESSER__Person:
		cmp = Lesser_Person(0)
	case GREATER__Person:
		cmp = Greater_Person(0)
	}
	return
}

type Lesser_Person byte

func (this Lesser_Person) F(left, right *Person) (ok bool) {

	ok = left < right

	return
}

type Greater_Person byte

func (this Greater_Person) F(left, right *Person) (ok bool) {

	ok = left > right

	return
}
