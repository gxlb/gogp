///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Sat Oct 29 2016 23:06:05]
// Generate from:
//   [github.com/vipally/gogp/examples/stack.gp]
//   [github.com/vipally/gogp/examples/example2/example2.gpg] [person]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct 24 2016 20:25:45]
// Version : 3.0.0.final
// 
///////////////////////////////////////////////////////////////////

package example2

import show_bytes "bytes" //

//stack object
type PersonStack []*Person

//new object
func NewPersonStack() *PersonStack {
	return &PersonStack{}
}

//push
func (this *PersonStack) Push(v *Person) {
	*this = append(*this, v)
}

//pop
func (this *PersonStack) Pop() (top *Person, ok bool) {
	if top, ok = this.Top(); ok {
		*this = (*this)[:this.Depth()-1]
	}
	return
}

//top
func (this *PersonStack) Top() (top *Person, ok bool) {
	if this.Depth() > 0 {
		top = (*this)[this.Depth()-1]
		ok = true
	}
	return

}

//depth
func (this *PersonStack) Depth() int {
	return len(*this)
}

//show
func (this *PersonStack) Show() string {
	var b show_bytes.Buffer
	b.WriteByte('[')
	for _, v := range *this {
		b.WriteString(v.Show())
		b.WriteByte(',')
	}
	if this.Depth() > 0 {
		b.Truncate(b.Len() - 1) //remove last ','
	}
	b.WriteByte(']')
	return b.String()
}
