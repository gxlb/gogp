//#GOGP_IGNORE_BEGIN
///////////////////////////////////////////////////////////////////
//
// !!!!!!!!!!!! NEVER MODIFY THIS FILE MANUALLY !!!!!!!!!!!!
//
// This file was auto-generated by tool [github.com/vipally/gogp]
// Last update at: [Tue Oct 25 2016 23:05:52]
// Generate from:
//   [github.com/vipally/gogp/examples/stack.go]
//   [github.com/vipally/gogp/examples/example.gpg] [GOGP_REVERSE_stack]
//
// Tool [github.com/vipally/gogp] info:
// CopyRight 2016 @Ally Dale. All rights reserved.
// Author  : Ally Dale(vipally@gmail.com)
// Blog    : http://blog.csdn.net/vipally
// Site    : https://github.com/vipally
// BuildAt : [Oct 24 2016 20:25:45]
// Version : 3.0.0.final
// 
///////////////////////////////////////////////////////////////////
//#GOGP_IGNORE_END

<PACKAGE>

//#GOGP_IFDEF GOGP_Show
import show_bytes "bytes" //
//#GOGP_ENDIF

//##GOGP_REQUIRE(github.com/vipally/gx/stl/gp/comparer)

//stack object
type <STACK_NAME_PREFIX>Stack []<VALUE_TYPE>

//new object
func New<STACK_NAME_PREFIX>Stack() *<STACK_NAME_PREFIX>Stack {
	return &<STACK_NAME_PREFIX>Stack{}
}

//push
func (this *<STACK_NAME_PREFIX>Stack) Push(v <VALUE_TYPE>) {
	*this = append(*this, v)
}

//pop
func (this *<STACK_NAME_PREFIX>Stack) Pop() (top <VALUE_TYPE>, ok bool) {
	if top, ok = this.Top(); ok {
		*this = (*this)[:this.Depth()-1]
	}
	return
}

//top
func (this *<STACK_NAME_PREFIX>Stack) Top() (top <VALUE_TYPE>, ok bool) {
	if this.Depth() > 0 {
		top = (*this)[this.Depth()-1]
		ok = true
	}
	return

}

//depth
func (this *<STACK_NAME_PREFIX>Stack) Depth() int {
	return len(*this)
}

//#GOGP_IFDEF GOGP_Show
//show
func (this *<STACK_NAME_PREFIX>Stack) Show() string {
	var b show_bytes.Buffer
	b.WriteByte('[')
	for _, v := range *this {
		b.WriteString(v.Show())
		b.WriteByte(',')
	}
	if this.Depth() > 0 {
		b.Truncate(b.Len() - 1) //remove last ','
	}
	b.WriteByte(']')
	return b.String()
}

//#GOGP_ENDIF

