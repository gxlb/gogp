// This file was auto-generated by [gpg] tool
// Last modify at: 2014-01-20 22:51:43.106125 +0800 +0800
// !!!!!!!!!NEVER MODIFY IT MANUALLY!!!!!!!!!

//Copyright @Ally 2014. All rights reserved.
//Version:   1.0.0
//Author:    vipally@gmail.com
//Blog site: http://blog.sina.com.cn/ally2014

//This is an example of using gpg tool for generic-programming
//this is an example of using gpg to define an auto-lock global value with generic type
//it will be realized to real go code by gpg tool through the .gpg file with the same name
package example

import (
	"sync"
)

type AutoLockGbl_str struct {
	val  string
	lock sync.RWMutex
}

func (me *AutoLockGbl_str) Get() (r string) {
	me.lock.RLock()
	defer me.lock.RUnlock()
	r = me.val
	return
}

func (me *AutoLockGbl_str) Set(val string) (r string) {
	me.lock.Lock()
	defer me.lock.Unlock()
	r = me.val
	me.val = val
	return
}
